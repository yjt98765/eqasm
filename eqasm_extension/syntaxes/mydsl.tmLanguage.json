{
    "name": "eQASM",
    "scopeName": "text.eqasm",
    "fileTypes": [
        "eqasm"
    ],
    "patterns": [{
            "explanation": "Line continuation",
            "match": "\\s*\\\\s*$",
            "name": "constant.character.escape"
        },
        {
            "match": "(?i)(.register)\\s+(r\\d+)\\s+([\\w\\d_-]+)",
            "captures": {
                "1": {
                    "name": "markup.bold.eqasm"
                },
                "2": {
                    "name": "constant.numeric.integer.eqasm"
                },
                "3": {
                    "name": "string.unquoted,markup.italic"
                }
            }
        },
        {
            "match": "(?i)(.def_sym)\\s+([\\w\\d_-]+)\\s+(0x[0-9a-f]+|0o[0-7]+|0b[01]+)",
            "captures": {
                "1": {
                    "name": "markup.bold.eqasm"
                },
                "2": {
                    "name": "string.unquoted,markup.italic"
                },
                "3": {
                    "name": "constant.numeric.integer.eqasm"
                }
            }

        },

        {
            "match": "(?i)\\b(bs)\\b\\s+(\\d+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "constant.numeric.preinterval.eqasm"
                }
            }

        },

        {
            "match": "#.*",
            "name": "comment.line.number-sign"
        },
        {
            "match": "(?i)\\b(BR)\\b\\s+\\b(ALWAYS|NEVER|EQ|NE|EQZ|NEZ|LT|LTZ|LE|GT|GE|GEZ|LTU|LEU|GTU|GEU|CARRY|NOTCARRY)\\b\\s*,\\s*([\\w\\d_-]+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "emphasis"
                },
                "3": {
                    "name": "markup.bold"
                }
            }
        },
        {
            "match": "(?i)\\b(BLTU|BLEU|BGTU|BGEU|BEQ|BNE|BLT|BLE|BGT|BGE)\\b\\s+([\\d\\w_-]+)\\s*,\\s*([\\d\\w_-]+)\\s*,\\s*([\\d\\w_-]+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "variable.parameter.eqasm"
                },
                "3": {
                    "name": "variable.parameter.eqasm"
                },
                "4": {
                    "name": "markup.bold"
                }
            }
        },
        {
            "match": "(?i)\\b(SB|SW|LB|LW)\\b\\s+([\\w\\d]+)\\s*,\\s*(0x[0-9a-f]+|0o[0-7]+|0b[01]+|[0-9]+)\\s*\\(([\\w\\d]+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "variable.parameter.eqasm"
                },
                "3": {
                    "name": "markup.bold"
                },
                "4": {
                    "name": "variable.parameter.eqasm"
                }
            }
        },
        {
            "match": "(?i)\\b(GOTO|BRA|BRN)\\b\\s*([\\w\\d_-]+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "markup.bold"
                }
            }
        },
        {
            "match": "(?i)\\b(ADD|OR|SLT|SUBC|ADDC|SUB|OR|XOR|DIV|REM|MUL|AND|XNOR|NAND|NOR)\\b\\s+([\\w\\d_-]+)\\s*,\\s*([\\w\\d_-]+),\\s*([\\w\\d_-]+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "variable.parameter.eqasm"
                },
                "3": {
                    "name": "variable.parameter.eqasm"
                },
                "4": {
                    "name": "variable.parameter.eqasm"
                }
            }
        },
        {
            "match": "(?i)\\b(ADDI|SLTIU)\\b\\s+([\\w\\d_-]+)\\s*,\\s*([\\w\\d_-]+)\\s*,\\s*(0x[0-9a-f]+|0o[0-7]+|0b[01]+|[0-9]+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "variable.parameter.eqasm"
                },
                "3": {
                    "name": "variable.parameter.eqasm"
                },
                "4": {
                    "name": "constant.numeric.integer.eqasm"
                }
            }
        },
        {
            "match": "(?i)\\b(NOT|CMP|LD|ST|SHL1|COPY|MOV|MULT2)\\b\\s+([\\w\\d_-]+)\\s*,\\s*([\\w\\d_-]+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "variable.parameter.eqasm"
                },
                "3": {
                    "name": "variable.parameter.eqasm"
                }
            }
        },
        {
            "match": "(?i)\\b(LDI)\\b\\s+([\\w\\d_-]+)\\s*,\\s*(0x[0-9a-f]+|0o[0-7]+|0b[01]+|[0-9]+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "variable.parameter.eqasm"
                },
                "3": {
                    "name": "constant.numeric.integer.eqasm"
                }
            }
        },
        {
            "match": "(?i)\\b(LDUI)\\b\\s+([\\w\\d_-]+)\\s*,\\s*(0x[0-9a-f]+|0o[0-7]+|0b[01]+|[0-9]+)\\s*,\\s*([\\w\\d_-]+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "variable.parameter.eqasm"
                },
                "3": {
                    "name": "constant.numeric.integer.eqasm"
                },
                "4": {
                    "name": "variable.parameter.eqasm"
                }
            }
        },
        {
            "match": "(?i)\\b(FMR)\\b\\s+([\\w\\d_-]+)\\s*,\\s*(q\\d+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "variable.parameter.eqasm"
                },
                "3": {
                    "name": "entity.name.type"
                }
            }
        },
        {
            "match": "(?i)\\b(FBR)\\b\\s+([\\w\\d_-]+)\\s*,\\s*([\\w\\d_-]+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "emphasis"
                },
                "3": {
                    "name": "variable.parameter.eqasm"
                }
            }
        },
        {
            "match": "(?i)\\b(QWAITR)\\b\\s+([\\w\\d_-]+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "variable.parameter.eqasm"
                }
            }
        },
        {
            "match": "(?i)\\b(QWAIT)\\b\\s+([\\w\\d_-]+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "constant.numeric.integer.eqasm"
                }
            }
        },
        {
            "match": "(?i)\\b(NOP|STOP|QNOP|CNOT)\\b",
            "name": "keyword.control.eqasm"
        },
        {
            "match": "(?i)\\b(SMIS|SMIT)\\b\\s+([st][0-9]+)",
            "captures": {
                "1": {
                    "name": "keyword.control.eqasm"
                },
                "2": {
                    "name": "entity.name.type"
                }
            }
        },
        {
            "match": "(?i)\\b([\\w\\d_-]+)\\s+([st][0-9]+)\\b",
            "captures": {
                "1": {
                    "name": "string.jade"
                },
                "2": {
                    "name": "entity.name.type"
                }
            }
        },
        {
            "match": "(?i)([\\d\\w_-]+)(:)",
            "captures": {
                "1": {
                    "name": "markup.bold"
                },
                "2": {
                    "name": "comment.line.number-sign"
                }
            }
        },
        {
            "match": "(?i)\\b([stq][0-9]+)\\b",
            "name": "entity.name.type"
        },

        {
            "match": "(?i)\\b(0x[0-9a-f]+|0o[0-7]+|0b[01]+|[0-9]+)\\b",
            "name": "constant.numeric.integer.eqasm"

        }
    ]
}